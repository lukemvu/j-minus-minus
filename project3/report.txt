1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<<11>>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<< >>>

3. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Long and Double Basic Types):
      Approach:
      - searched for all instances of INT and added LONG and DOUBLE support

      Issues and resolution:
      - issue with parser parsing double instead of long in declaration for
      - fibonacci as well as soem local vars
      - found issue with missing class descriptor, looking for double.class
      - and long.class, tracing for int.class
      - tried Type.java field descriptors added in type.java
      - private static String descriptorFor(Class<?> classRep) {
      - to find out names, did a google search for jvm desciptor
      - added missing
      - : classRep == double.class ? "D"
        : classRep == long.class ? "J"

   Problem 2 (Operators):
      Approach:

      - similarly to how it was done in project 1, I added new functions such
      as conditionalOrExpession. Found where operators belonged in expressions
      added their features

      Issues and resolution:
      - no issues, GS passed

   Problem 3 (Conditional Expression):
      Approach:
      - create new method for it and place in between assignment expression
      and conditionalOR
      - start like all other expressions
      - studied other methods, notably referenceType()
      - use mustBe to consume tokens, and parExpression
      - jifstatement, takes 4 params, line condition, then else
      - looked inside jConditionalExpression
      - takes 4 parameters, line condition then else
      - time consuming

      Issues and resolution:
      - no issues, worked on GS

   Problem 4 (Do Statement):
      Approach:
      - freebie from examples

      Issues and resolution:
      - noo issues

   Problem 5 (For Statement):
      Approach:
      - looked into JForStatement
      - build similar to do, using mustbe
      - for update, check other methods that use similar comma expression
      and an arraylist
      - couldn't figure out how to do the type cariableDeclarators
      portion for forInit, hard stuck for a while
      - realized JVariableDeclaration object extends JStatement
      - that was a valid object to add to the ArrayList
      - can't use localvariabledeclarstatement because it consumes the semicolon
      - can copy paste the other stuff except that and pass it in

      Issues and resolution: ...

      luke@luke-elementaryos-desktop:~/workspace/j--$ bash ./bin/j-- -p project3/ForStatement.java | diff -u - project3/ForStatement.ast
      project3/ForStatement.java:8: error: Literal sought where int found
      project3/ForStatement.java:8: error: Invalid statement expression; it does not have a side-effect
      project3/ForStatement.java:8: error: Invalid statement expression; it does not have a side-effect
      --- -	2021-03-02 00:33:07.239728650 -0500
      +++ project3/ForStatement.ast	2021-01-28 08:56:27.000000000 -0500
      @@ -73,10 +73,20 @@
                           {
                               "Init":
                               {
      -                            "JStatementExpression:8":
      +                            "JVariableDeclaration:8":
                                   {
      -                                "JWildExpression:8":
      +                                "JVariableDeclarator:8":
                                       {
      +                                    "name": "i",
      +                                    "type": "int",
      +                                    "Initializer":
      +                                    {
      +                                        "JLiteralInt:8":
      +                                        {
      +                                            "type": "",
      +                                            "value": "1"
      +                                        }
      +                                    }
                                       }
                                   }
                               },

    - fixed an error, in forinit, use seeBasicType and seeRefType to know which
    path to go into, was using see(IDENFTIFIER) previously, which was jsut wrong
    - project3/ForStatement.java:8: error: Invalid statement expression; it does not have a side-effect
    - this is my last issue
    - seraching around statementExpression()
    - saw that i was missing adding post inc and pre dec to statementexpression


   Problem 6 (Break Statement):
      Approach:
      - checked jbreakstatement to see what it took for params,
      just line number
      create a new one, check for semi, return, easy cake

      Issues and resolution:

   Problem 7 (Continue Statement): ...
      Approach: ...

      Issues and resolution: ...

   Problem 8 (Switch Statement): ...
      Approach: ...

      Issues and resolution: ...

   Problem 9 (Exception Handlers): ...
      Approach: ...

      Issues and resolution: ...

   Problem 10 (Interface Type Declaration): ...
      Approach: ...

      Issues and resolution: ...

4. Did you receive help from anyone? List their names, status (classmate, 
   CS451/651 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------

   ...                ...          ...

5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   ...
