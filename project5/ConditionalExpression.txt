Classfile /home/luke/workspace/j--/project5/ConditionalExpression.class
  Last modified Apr 8, 2021; size 595 bytes
  MD5 checksum 558224f4c773982d012845f74cdbc631
  Compiled from "ConditionalExpression.java"
public class ConditionalExpression
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #9                          // ConditionalExpression
  super_class: #10                        // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #10.#21        // java/lang/Object."<init>":()V
   #2 = Class              #22            // java/util/Random
   #3 = Methodref          #2.#21         // java/util/Random."<init>":()V
   #4 = Methodref          #2.#23         // java/util/Random.nextBoolean:()Z
   #5 = String             #24            // Heads
   #6 = String             #25            // Tails
   #7 = Fieldref           #26.#27        // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Methodref          #28.#29        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #9 = Class              #30            // ConditionalExpression
  #10 = Class              #31            // java/lang/Object
  #11 = Utf8               <init>
  #12 = Utf8               ()V
  #13 = Utf8               Code
  #14 = Utf8               LineNumberTable
  #15 = Utf8               main
  #16 = Utf8               ([Ljava/lang/String;)V
  #17 = Utf8               StackMapTable
  #18 = Class              #32            // java/lang/String
  #19 = Utf8               SourceFile
  #20 = Utf8               ConditionalExpression.java
  #21 = NameAndType        #11:#12        // "<init>":()V
  #22 = Utf8               java/util/Random
  #23 = NameAndType        #33:#34        // nextBoolean:()Z
  #24 = Utf8               Heads
  #25 = Utf8               Tails
  #26 = Class              #35            // java/lang/System
  #27 = NameAndType        #36:#37        // out:Ljava/io/PrintStream;
  #28 = Class              #38            // java/io/PrintStream
  #29 = NameAndType        #39:#40        // println:(Ljava/lang/String;)V
  #30 = Utf8               ConditionalExpression
  #31 = Utf8               java/lang/Object
  #32 = Utf8               java/lang/String
  #33 = Utf8               nextBoolean
  #34 = Utf8               ()Z
  #35 = Utf8               java/lang/System
  #36 = Utf8               out
  #37 = Utf8               Ljava/io/PrintStream;
  #38 = Utf8               java/io/PrintStream
  #39 = Utf8               println
  #40 = Utf8               (Ljava/lang/String;)V
{
  public ConditionalExpression();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 4: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: new           #2                  // class java/util/Random
         3: dup
         4: invokespecial #3                  // Method java/util/Random."<init>":()V
         7: astore_1
         8: aload_1
         9: invokevirtual #4                  // Method java/util/Random.nextBoolean:()Z
        12: ifeq          20
        15: ldc           #5                  // String Heads
        17: goto          22
        20: ldc           #6                  // String Tails
        22: astore_2
        23: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        26: aload_2
        27: invokevirtual #8                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        30: return
      LineNumberTable:
        line 6: 0
        line 7: 8
        line 8: 23
        line 9: 30
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class java/util/Random ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
}
SourceFile: "ConditionalExpression.java"
